#!/bin/sh

modpkg(){
    case $# in
    0)  echo "usage: modpkg [mod script path] <PKGINFO.in >PKGINFO.out" 1>&2
        return 2 ;;
    esac
    if ! [ -f "$1" -a -r "$1" ]; then
        echo "modpkg: error: bad mod script path: $1" 1>&2
        return 1
    fi
    
awk -v modpath="$1" '
function err(e){
    ORS="\n"
    printf("modpkg: script error (line %d): %s\n", lineno, e) |"cat 1>&2"
    exit(1)
}

function outfld(f){
    outflds = outflds f " "
}

function cram(x){
    outfld($2)
    pb[$2,x] = $3
    for(i=4; i<=NF; i++) pb[$2,x] = pb[$2,x] " " $i
}

function dup(f){
    pb[f, pb[f,"n"]+1] = pb[f, pb[f,"n"]]
    pb[f,"n"]++
}

function rev(f){
    n = pb[f,"n"]
    for(i=1; i<=n; i++) tmp[n-(i-1)] = pb[f,i]
    for(i=1; i<=n; i++) pb[f,i] = tmp[i]
}

function move2(r, from, to){
    for(k=pb[from,"n"]; k>0; k--){
        if(!match(pb[from,k], r)) continue
        pb[to,++pb[to,"n"]] = pb[from,k]
        pb[from,k] = pb[from,pb[from,"n"]--]
    }
}

function move(){
    for(i=3; i<=NF; i++) if($i == "from") break
    if(i>NF)
        err("move command is missing the word 'from'")
    if($(i+2) != "to" || i+3 > NF)
        err("move command is missing the 'to' parameter")
    for(j=2; j<i; j++) move2($j, $(i+1), $(i+3))
    outfld($(i+3)) # make sure the "to" field is printed
}

function split2(){
    for(i=pb[$2,"n"]; i>0; i--){
        if((c = split(pb[$2,i], a, / +/)) < 2) continue
        pb[$2,i] = a[1]
        for(j=2; j<=c; j++) pb[$2,++pb[$2,"n"]] = a[j]
    }
}

function inter(p){
    FS=" "; RS="\n"
    while(getline <p > 0){
        lineno++
        if(NF == 0 || /^#/){
            continue
        }else if($1 == "set"){
            pb[$2,"n"] = 1; cram(1)
        }else if($1 == "push"){
            cram(++pb[$2,"n"])
        }else if($1 == "slip"){
            rev($2); cram(++pb[$2,"n"]); rev($2)
        }else if($1 == "move"){
            move()
        }else if($1 == "split"){
            split2()
        }else if($1 == "fmt"){
            pb[$2,"n"]=1
            pb[$2,1] = sprintf($3, pb[$2,1])
        }else{
            err("unknown command: " $1)
        }
    }
}

BEGIN { FS="\n"; RS="" }

{
    pb[$1,"n"] = NF-1
    for(i=2; i<=NF; i++) pb[$1,i-1] = $i
    outfld($1)
}

END {
    # Backup the pkgver in case it is changed. See the vervar func.
    pb["$_ver",1] = pb["pkgver",1]; pb["$_ver","n"] = 1

    inter(modpath)
    c = split(outflds, flds, / /)
    for(i=1; i<c; i++){
        f = flds[i]
        if(f in seen) continue
        seen[f]=""
        print f
        for(j=1; j<=pb[f,"n"]; j++) print pb[f,j]
        print ""
    }
}
' ; } #modpkg

modpkg "$@"
exit $?
